Config()
	.screenSize(960, 540)
	.ambientColor(1, 1, 1)
	.ambientIntensity(0.15)

set("r_scale", 1)
set("d_scale", 0.05)

set("sun_r",        695.7 * r_scale / 4)
set("mercury_r",   2.4397 * r_scale * 5) set("mercury_sun_d",   5700.0000 * d_scale)
set("venus_r",     6.0518 * r_scale * 5) set("venus_sun_d",    10800.0000 * d_scale)
set("earth_r",     6.3781 * r_scale * 5) set("earth_sun_d",    15000.0000 * d_scale)
set("moon_r",      1.7381 * r_scale * 5) set("moon_earth_d",      38.4400 * d_scale)
set("mars_r",      3.3962 * r_scale * 5) set("mars_sun_d",     22800.0000 * d_scale)
set("jupiter_r",  71.4920 * r_scale * 5) set("jupiter_sun_d",  77900.0000 * d_scale)
set("saturn_r",   60.2680 * r_scale * 5) set("saturn_sun_d",  143000.0000 * d_scale)
set("uranus_r",   25.5590 * r_scale * 5) set("uranus_sun_d",  288000.0000 * d_scale)
set("neptune_r",  24.7640 * r_scale * 5) set("neptune_sun_d", 450000.0000 * d_scale)
set("pluto_r",     2.3770 * r_scale * 5) set("pluto_sun_d",   591000.0000 * d_scale)

Console().print(neptune_sun_d)

Texture("tex_stars", "textures/planets/stars.ppm")
	.filter(TEXTURE_FILTER_BILINEAR)
Texture("tex_sun", "textures/planets/sun.ppm")
	.filter(TEXTURE_FILTER_BILINEAR)
Texture("tex_mercury", "textures/planets/mercury.ppm")
	.filter(TEXTURE_FILTER_BILINEAR)
Texture("tex_venus", "textures/planets/venus.ppm")
	.filter(TEXTURE_FILTER_BILINEAR)
Texture("tex_earth", "textures/planets/earth.ppm")
   .filter(TEXTURE_FILTER_BILINEAR)
Texture("tex_moon", "textures/planets/moon.ppm")
   .filter(TEXTURE_FILTER_BILINEAR)
Texture("tex_mars", "textures/planets/mars.ppm")
	.filter(TEXTURE_FILTER_BILINEAR)
Texture("tex_jupiter", "textures/planets/jupiter.ppm")
	.filter(TEXTURE_FILTER_BILINEAR)
Texture("tex_saturn", "textures/planets/saturn.ppm")
	.filter(TEXTURE_FILTER_BILINEAR)
Texture("tex_uranus", "textures/planets/uranus.ppm")
	.filter(TEXTURE_FILTER_BILINEAR)
Texture("tex_neptune", "textures/planets/neptune.ppm")
	.filter(TEXTURE_FILTER_BILINEAR)
Texture("tex_pluto", "textures/planets/pluto.ppm")
	.filter(TEXTURE_FILTER_BILINEAR)

Material("mat_stars")
	.colorMap("tex_stars")
	.emission(1)
	.ignoresLight()
Material("mat_sun")
	.colorMap("tex_sun")
	.emission(2)
	.ignoresLight()
Material("mat_mercury")
	.colorMap("tex_mercury")
Material("mat_venus")
	.colorMap("tex_venus")
Material("mat_earth")
	.colorMap("tex_earth")
Material("mat_moon")
	.colorMap("tex_moon")
Material("mat_mars")
	.colorMap("tex_mars")
Material("mat_jupiter")
	.colorMap("tex_jupiter")
Material("mat_saturn")
	.colorMap("tex_saturn")
Material("mat_uranus")
	.colorMap("tex_uranus")
Material("mat_neptune")
	.colorMap("tex_neptune")
Material("mat_pluto")				
	.colorMap("tex_pluto")				

Camera()
	.fov(70)
	.moveSpeed(1000)

translate(0, 0, sun_r * 2)

ObjSphere()
	.material("mat_stars")
	.radius(pluto_sun_d * 2)

ObjSphere()
	.material("mat_sun")
	.radius(sun_r)
PointLight()
	.color(1, 0.7, 0.3)
	.glare(0.45)
	.dispersion(0)

push()
	translate(mercury_sun_d, 0, 0)
	ObjSphere()
		.radius(mercury_r)
		.material("mat_mercury")
pop()

rotate(0, 16, 0)
push()
	translate(venus_sun_d, 0, 0)
	ObjSphere()
		.radius(venus_r)
		.material("mat_venus")
pop()

rotate(0, 16, 0)
push()
	translate(earth_sun_d, 0, 0)
	push()
		ObjSphere()
			.radius(earth_r)
			.material("mat_earth")
	pop()
#	push()
#		translate(moon_earth_d, 0, 0)
#		ObjSphere()
#			.radius(moon_r)
#			.material("mat_moon")
#	pop()
pop()

rotate(0, 16, 0)
push()
	translate(mars_sun_d, 0, 0)
	ObjSphere()
		.radius(mars_r)
		.material("mat_mars")
pop()

rotate(0, 16, 0)
push()
	translate(jupiter_sun_d, 0, 0)
	ObjSphere()
		.radius(jupiter_r)
		.material("mat_jupiter")
pop()

rotate(0, 16, 0)
push()
	translate(saturn_sun_d, 0, 0)
	ObjSphere()
		.radius(saturn_r)
		.material("mat_saturn")
pop()

rotate(0, 16, 0)
push()
	translate(uranus_sun_d, 0, 0)
	ObjSphere()
		.radius(uranus_r)
		.material("mat_uranus")
pop()

rotate(0, 16, 0)
push()
	translate(neptune_sun_d, 0, 0)
	ObjSphere()
		.radius(neptune_r)
		.material("mat_neptune")
pop()

rotate(0, 16, 0)
push()
	translate(pluto_sun_d, 0, 0)
	ObjSphere()
		.radius(pluto_r)
		.material("mat_pluto")
pop()
